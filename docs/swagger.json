{
    "swagger": "2.0",
    "info": {
        "description": "This is the HTTP + JSON + REST version of the Wiz Processor API.",
        "title": "Wiz Processor API",
        "contact": {},
        "license": {
            "name": "Apache 2.0"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/processors": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieves all processors",
                "operationId": "GetAllProcessors",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/processors.Processors"
                        }
                    }
                }
            }
        },
        "/processors/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieves a single processor",
                "operationId": "GetProcessor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Processor ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/processors.Processor"
                        }
                    }
                }
            }
        },
        "/processors/{procID}/runs": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieves all runs",
                "operationId": "GetAllRuns",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Processor ID",
                        "name": "procID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/processors.Runs"
                        }
                    }
                }
            }
        },
        "/processors/{procID}/runs/{runID}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieves a single run",
                "operationId": "GetRun",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Processor ID",
                        "name": "procID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Run ID",
                        "name": "runID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/processors.Run"
                        }
                    }
                }
            }
        },
        "/processors/{procID}/runs/{runID}/config": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieves a single run's configuration",
                "operationId": "GetConfig",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Processor ID",
                        "name": "procID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Run ID",
                        "name": "runID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/processors.Configuration"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Sets a single run's configuration",
                "operationId": "Configure",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Processor ID",
                        "name": "procID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Run ID",
                        "name": "runID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Configuration to set",
                        "name": "configuration",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/processors.Configuration"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/processors/{procID}/runs/{runID}/data": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Gets data to the run",
                "operationId": "GetData",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Processor ID",
                        "name": "procID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Run ID",
                        "name": "runID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/processors.DataSpec"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Adds data from the run",
                "operationId": "AddData",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Processor ID",
                        "name": "procID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Run ID",
                        "name": "runID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Data to add",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/processors.Data"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "processors.Configuration": {
            "type": "object",
            "properties": {
                "ExecutorConfig": {
                    "type": "object",
                    "$ref": "#/definitions/processors.ExecutorConfig"
                },
                "ExpectedData": {
                    "description": "Embeded structs have a weird JSON serialization issue",
                    "type": "object",
                    "$ref": "#/definitions/processors.ExpectedData"
                },
                "Processor": {
                    "type": "object"
                }
            }
        },
        "processors.Data": {
            "type": "object",
            "properties": {
                "AssociatedChunkID": {
                    "description": "this is a reference to the opposing data chunk. If it is an input chunk this references the output.\nIf it is an output chunk it references the input chunk",
                    "type": "string"
                },
                "ChunkID": {
                    "type": "string"
                },
                "FilesystemReference": {
                    "type": "object",
                    "$ref": "#/definitions/processors.FilesystemReference"
                },
                "Format": {
                    "type": "integer"
                },
                "RawData": {
                    "type": "object"
                },
                "State": {
                    "type": "integer"
                },
                "Type": {
                    "type": "integer"
                }
            }
        },
        "processors.DataSpec": {
            "type": "object",
            "properties": {
                "In": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/processors.Data"
                    }
                },
                "Out": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/processors.Data"
                    }
                }
            }
        },
        "processors.DownstreamDataLocation": {
            "type": "object",
            "properties": {
                "Hostname": {
                    "type": "string"
                },
                "ProcID": {
                    "type": "string"
                },
                "RunID": {
                    "type": "string"
                }
            }
        },
        "processors.ExecutorConfig": {
            "type": "object",
            "properties": {
                "DownstreamLocations": {
                    "description": "TODO: make API URL templating agnostic, refactor into server package\ne.g. Server.GetProc(procID, runID) will return /processors/procID/runs/runID\nthis could be used both for generating endpoints and here, for passing outputs downstream",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/processors.DownstreamDataLocation"
                    }
                },
                "MaxWorkers": {
                    "type": "integer"
                },
                "SendDownstream": {
                    "type": "boolean"
                }
            }
        },
        "processors.ExpectedData": {
            "type": "object",
            "properties": {
                "NumChunks": {
                    "description": "a counter value",
                    "type": "integer"
                }
            }
        },
        "processors.FilesystemReference": {
            "type": "object",
            "properties": {
                "Driver": {
                    "description": "the filesystem driver (e.g. NFS, local, ZFS, etc)",
                    "type": "string"
                },
                "Location": {
                    "description": "the actual file path location",
                    "type": "string"
                }
            }
        },
        "processors.Processor": {
            "type": "object",
            "properties": {
                "Name": {
                    "description": "ID is the human readable name",
                    "type": "string"
                },
                "ProcID": {
                    "description": "ProcID is the uniquely identifiable Processor ID",
                    "type": "string"
                },
                "Version": {
                    "type": "string"
                }
            }
        },
        "processors.Processors": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/processors.Processor"
            }
        },
        "processors.Run": {
            "type": "object",
            "properties": {
                "Configuration": {
                    "type": "object",
                    "$ref": "#/definitions/processors.Configuration"
                },
                "CurrentState": {
                    "description": "Note: Embedding structs will automatically promote the child struct's functions,\nand since our State type is an enum that overrides the default Marshal and Unmarshal functions,\nit overwrites it for the parent type as well.\nRemember, the CurrentState must be updated from the RunProcessor state to be fresh. TODO: think about these guarantees",
                    "type": "integer"
                },
                "RunID": {
                    "type": "string"
                }
            }
        },
        "processors.Runs": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/processors.Run"
            }
        },
        "server.Empty": {
            "type": "object"
        }
    }
}