// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "This document defines the Wiz Processor API as implemented using JSON over HTTP.",
    "title": "Wiz Processor API",
    "version": "0.1.0"
  },
  "paths": {
    "/processor/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Processors"
        ],
        "summary": "GetProcessor",
        "operationId": "GetProcessor",
        "parameters": [
          {
            "type": "string",
            "description": "The processor ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "id",
                "name"
              ],
              "properties": {
                "id": {
                  "description": "the machine readable processor ID",
                  "type": "string"
                },
                "name": {
                  "description": "a human readable name for the processor",
                  "type": "string"
                },
                "tags": {
                  "type": "array",
                  "items": {}
                },
                "version": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "id": "ftp",
                "name": "FTP Downloader",
                "tags": [
                  "fetcher",
                  "ftp"
                ],
                "version": "0.1.0"
              }
            }
          }
        }
      }
    },
    "/processor/{id}/run/{runID}": {
      "get": {
        "description": "In the future this may contain info about which chunks/streams have been 1. sent, 2. received, and 3. processed",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Processors"
        ],
        "summary": "GetRun",
        "operationId": "GetRun",
        "parameters": [
          {
            "type": "string",
            "description": "The processor ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The run ID",
            "name": "runID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "state",
                "runID"
              ],
              "properties": {
                "configuration": {
                  "description": "the current configuration",
                  "type": "object"
                },
                "runID": {
                  "description": "the globally unique ID of the run",
                  "type": "string"
                },
                "state": {
                  "description": "the state of the processor",
                  "type": "string",
                  "enum": [
                    "Uninitialized",
                    "Configured",
                    "Idle",
                    "Processing",
                    "Failed",
                    "Succeeded",
                    "CompletedWithErrors"
                  ]
                }
              }
            },
            "examples": {
              "application/json": {
                "configuration": {},
                "runID": "27c2e6a3-6dc5-57e5-bc0e-f6e91ed27db3",
                "state": "Uninitialized"
              }
            }
          }
        }
      }
    },
    "/processor/{id}/run/{runID}/configuration": {
      "get": {
        "description": "Returns the current configuration or an error if is uninitialized. This is to distinguish between a properly configured but null-valued configuration and an uninitialized config.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Processors"
        ],
        "summary": "GetConfig",
        "operationId": "GetConfig",
        "parameters": [
          {
            "type": "string",
            "description": "The processor ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The run ID",
            "name": "runID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "required": [
                "value"
              ],
              "properties": {
                "trace": {
                  "description": "The full trace of the error. This may only be available in a debug mode",
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "value": "uninitialized"
              }
            }
          }
        }
      },
      "post": {
        "description": "Configure configures the given processor runID, and returns an error if the configuration is invalid. It returns the applied configuration on sucess.\n\nTODO: how to handle old versions of configuration and updates: pull a GM-Control and require a hash? or just a simple version number?",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Processors"
        ],
        "summary": "UpdateConfig",
        "operationId": "UpdateConfig",
        "parameters": [
          {
            "type": "string",
            "description": "The processor ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The run ID",
            "name": "runID",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "commit": {
                  "type": "string"
                },
                "repo": {
                  "type": "string"
                }
              },
              "example": {
                "commit": "d90f73b1-02ca-56a8-89b8-b27f8bda751b",
                "repo": "http://ifa.tg/basioc/repo.git"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "required": [
                "value"
              ],
              "properties": {
                "trace": {
                  "description": "The full trace of the error. This may only be available in a debug mode",
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "trace": "example_stack_trace",
                "value": "example error"
              }
            }
          }
        }
      }
    },
    "/processor/{id}/run/{runID}/data": {
      "get": {
        "description": "Returns all the data chunks which the processor has recieved, and all that it has written\n\nTODO: figure out if each chunk should report state: yes",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Processors"
        ],
        "summary": "GetData",
        "operationId": "GetData",
        "parameters": [
          {
            "type": "string",
            "description": "The processor ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The run ID",
            "name": "runID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "in": {
                  "type": "array",
                  "items": {}
                },
                "out": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "examples": {
              "application/json": {
                "in": [
                  {
                    "chunk_id": "a72eda4e-8db4-5692-b40c-eacc6c755d64",
                    "error": {
                      "trace": "example_stack_trace",
                      "value": "example error"
                    },
                    "state": "Syncing"
                  }
                ],
                "out": [
                  {
                    "chunk_id": "a72eda4e-8db4-5692-b40c-eacc6c755d64",
                    "error": {
                      "trace": "example_stack_trace",
                      "value": "example error"
                    },
                    "state": "Syncing"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/processor/{id}/run/{runID}/data/input/{chunkID}": {
      "get": {
        "description": "This is not likely to be used, as we might as well get all chunks, but it needs to be here.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Processors"
        ],
        "summary": "GetInputChunk",
        "operationId": "GetInputChunk",
        "parameters": [
          {
            "type": "string",
            "description": "The processor ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The run ID",
            "name": "runID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "the input chunk ID",
            "name": "chunkID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "state",
                "chunk_id"
              ],
              "properties": {
                "chunk_id": {
                  "description": "the ID of the chunk",
                  "type": "string"
                },
                "error": {
                  "description": "the error which caused the chunk to fail if it is in the Failed state",
                  "type": "object",
                  "required": [
                    "value"
                  ],
                  "properties": {
                    "trace": {
                      "description": "The full trace of the error. This may only be available in a debug mode",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "output_chunk_id": {
                  "description": "the output chunk ID association",
                  "type": "string"
                },
                "state": {
                  "description": "the state of the data chunk.",
                  "type": "string",
                  "enum": [
                    "Syncing",
                    "Determining",
                    "Validating",
                    "Running",
                    "Failed",
                    "Succeeded"
                  ]
                }
              }
            },
            "examples": {
              "application/json": {
                "chunk_id": "a72eda4e-8db4-5692-b40c-eacc6c755d64",
                "error": {
                  "trace": "example_stack_trace",
                  "value": "example error"
                },
                "output_chunk_id": "a3a3a1c6-826f-5fc0-8dee-9d015e1fff30",
                "state": "Syncing"
              }
            }
          }
        }
      },
      "post": {
        "description": "TODO: add example data to values for this request, also:\nfigure out if we need to specifically distinguish between raw and file data at API level: yes",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Processors"
        ],
        "summary": "AddData",
        "operationId": "AddData",
        "parameters": [
          {
            "type": "string",
            "description": "The processor ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The run ID",
            "name": "runID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "the input chunk ID",
            "name": "chunkID",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "state",
                "chunk_id"
              ],
              "properties": {
                "chunk_id": {
                  "description": "the ID of the chunk",
                  "type": "string"
                },
                "data": {
                  "type": "object"
                },
                "error": {
                  "description": "the error which caused the chunk to fail if it is in the Failed state",
                  "type": "object",
                  "required": [
                    "value"
                  ],
                  "properties": {
                    "trace": {
                      "description": "The full trace of the error. This may only be available in a debug mode",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "output_chunk_id": {
                  "description": "the output chunk ID association",
                  "type": "string"
                },
                "state": {
                  "description": "the state of the data chunk.",
                  "type": "string",
                  "enum": [
                    "Syncing",
                    "Determining",
                    "Validating",
                    "Running",
                    "Failed",
                    "Succeeded"
                  ]
                }
              },
              "example": {
                "chunk_id": "e916d66c-6491-59a0-b555-ee02a08e1028",
                "data": {
                  "type": "file",
                  "value": {
                    "fs_data": {
                      "driver": "local",
                      "location": "/bls/series.file"
                    }
                  }
                },
                "output_chunk_id": "61580ac1-5de8-59e1-b9cd-7766d1667dd9",
                "state": "Syncing"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "state",
                "chunk_id"
              ],
              "properties": {
                "chunk_id": {
                  "description": "the ID of the chunk",
                  "type": "string"
                },
                "error": {
                  "description": "the error which caused the chunk to fail if it is in the Failed state",
                  "type": "object",
                  "required": [
                    "value"
                  ],
                  "properties": {
                    "trace": {
                      "description": "The full trace of the error. This may only be available in a debug mode",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "state": {
                  "description": "the state of the data chunk.",
                  "type": "string",
                  "enum": [
                    "Syncing",
                    "Determining",
                    "Validating",
                    "Running",
                    "Failed",
                    "Succeeded"
                  ]
                }
              }
            },
            "examples": {
              "application/json": {
                "chunk_id": "a72eda4e-8db4-5692-b40c-eacc6c755d64",
                "error": {
                  "trace": "example_stack_trace",
                  "value": "example error"
                },
                "state": "Syncing"
              }
            }
          }
        }
      }
    },
    "/processor/{id}/run/{runID}/data/output/{chunkID}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Processors"
        ],
        "summary": "GetOutputChunk",
        "operationId": "GetOutputChunk",
        "parameters": [
          {
            "type": "string",
            "description": "The processor ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The run ID",
            "name": "runID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The output chunk ID to retrieve",
            "name": "chunkID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "state",
                "chunk_id"
              ],
              "properties": {
                "chunk_id": {
                  "description": "the ID of the chunk",
                  "type": "string"
                },
                "data": {
                  "type": "object"
                },
                "error": {
                  "description": "the error which caused the chunk to fail if it is in the Failed state",
                  "type": "object",
                  "required": [
                    "value"
                  ],
                  "properties": {
                    "trace": {
                      "description": "The full trace of the error. This may only be available in a debug mode",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "state": {
                  "description": "the state of the data chunk.",
                  "type": "string",
                  "enum": [
                    "Syncing",
                    "Determining",
                    "Validating",
                    "Running",
                    "Failed",
                    "Succeeded"
                  ]
                }
              }
            },
            "examples": {
              "application/json": {
                "chunk_id": "a72eda4e-8db4-5692-b40c-eacc6c755d64",
                "data": {},
                "error": {
                  "trace": "example_stack_trace",
                  "value": "example error"
                },
                "state": "Syncing"
              }
            }
          }
        }
      }
    },
    "/processor/{id}/runs": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Processors"
        ],
        "summary": "GetAllRuns",
        "operationId": "GetAllRuns",
        "parameters": [
          {
            "type": "string",
            "description": "The processor ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {}
            },
            "examples": {
              "application/json": [
                {
                  "configuration": {},
                  "runID": "27c2e6a3-6dc5-57e5-bc0e-f6e91ed27db3",
                  "state": "Uninitialized"
                }
              ]
            }
          }
        }
      }
    },
    "/processors": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Processors"
        ],
        "summary": "GetAllProcessors",
        "operationId": "GetAllProcessors",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {}
            },
            "examples": {
              "application/json": [
                {
                  "id": "ftp",
                  "name": "FTP Downloader",
                  "tags": [
                    "fetcher",
                    "ftp"
                  ],
                  "version": "0.1.0"
                }
              ]
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Chunk": {
      "allOf": [
        {
          "$ref": "#/definitions/ChunkState"
        },
        {
          "type": "object",
          "required": [
            "chunk_id"
          ],
          "properties": {
            "chunk_id": {
              "description": "the ID of the chunk",
              "type": "string"
            },
            "error": {
              "description": "the error which caused the chunk to fail if it is in the Failed state",
              "$ref": "#/definitions/Error"
            }
          }
        }
      ]
    },
    "ChunkState": {
      "type": "object",
      "required": [
        "state"
      ],
      "properties": {
        "state": {
          "description": "the state of the data chunk.",
          "type": "string",
          "enum": [
            "Syncing",
            "Determining",
            "Validating",
            "Running",
            "Failed",
            "Succeeded"
          ]
        }
      }
    },
    "Configuration": {
      "type": "object"
    },
    "Data": {
      "type": "object"
    },
    "Data Chunk Input": {},
    "Data Chunk Output": {},
    "Error": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "trace": {
          "description": "The full trace of the error. This may only be available in a debug mode",
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Filesystem": {
      "type": "object",
      "required": [
        "driver",
        "location"
      ],
      "properties": {
        "driver": {
          "type": "string"
        },
        "location": {
          "type": "string"
        }
      }
    },
    "Processor": {},
    "ProcessorObject": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "description": "the machine readable processor ID",
          "type": "string"
        },
        "name": {
          "description": "a human readable name for the processor",
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {}
        },
        "version": {
          "type": "string"
        }
      }
    },
    "ProcessorState": {
      "type": "object",
      "required": [
        "state"
      ],
      "properties": {
        "state": {
          "description": "the state of the processor",
          "type": "string",
          "enum": [
            "Uninitialized",
            "Configured",
            "Idle",
            "Processing",
            "Failed",
            "Succeeded",
            "CompletedWithErrors"
          ]
        }
      }
    },
    "Processors Collection": {},
    "Run": {
      "allOf": [
        {
          "$ref": "#/definitions/ProcessorState"
        },
        {
          "type": "object",
          "required": [
            "runID"
          ],
          "properties": {
            "configuration": {
              "description": "the current configuration",
              "$ref": "#/definitions/Configuration"
            },
            "runID": {
              "description": "the globally unique ID of the run",
              "type": "string"
            }
          }
        }
      ]
    },
    "Run/Generic State Information": {},
    "Runs": {},
    "Sink": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "description": "the sink stream identifier",
          "type": "string"
        },
        "name": {
          "description": "a human readable name for the sink",
          "type": "string"
        }
      }
    },
    "Source": {
      "type": "object"
    }
  },
  "tags": [
    {
      "description": "All of the processor API is designed here.\n\nBecause the Wiz Manager could likely schedule multiple Pipelines or Tasks in the same Pipeline that use the same Processor Task on one physical/logical Processor, the Processor MUST support partitioning all of its logic including Configuration and State by a Manager-scope globally unique **Run ID**",
      "name": "Processors"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "This document defines the Wiz Processor API as implemented using JSON over HTTP.",
    "title": "Wiz Processor API",
    "version": "0.1.0"
  },
  "paths": {
    "/processor/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Processors"
        ],
        "summary": "GetProcessor",
        "operationId": "GetProcessor",
        "parameters": [
          {
            "type": "string",
            "description": "The processor ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "id",
                "name"
              ],
              "properties": {
                "id": {
                  "description": "the machine readable processor ID",
                  "type": "string"
                },
                "name": {
                  "description": "a human readable name for the processor",
                  "type": "string"
                },
                "tags": {
                  "type": "array",
                  "items": {}
                },
                "version": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "id": "ftp",
                "name": "FTP Downloader",
                "tags": [
                  "fetcher",
                  "ftp"
                ],
                "version": "0.1.0"
              }
            }
          }
        }
      }
    },
    "/processor/{id}/run/{runID}": {
      "get": {
        "description": "In the future this may contain info about which chunks/streams have been 1. sent, 2. received, and 3. processed",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Processors"
        ],
        "summary": "GetRun",
        "operationId": "GetRun",
        "parameters": [
          {
            "type": "string",
            "description": "The processor ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The run ID",
            "name": "runID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "state",
                "runID"
              ],
              "properties": {
                "configuration": {
                  "description": "the current configuration",
                  "type": "object"
                },
                "runID": {
                  "description": "the globally unique ID of the run",
                  "type": "string"
                },
                "state": {
                  "description": "the state of the processor",
                  "type": "string",
                  "enum": [
                    "Uninitialized",
                    "Configured",
                    "Idle",
                    "Processing",
                    "Failed",
                    "Succeeded",
                    "CompletedWithErrors"
                  ]
                }
              }
            },
            "examples": {
              "application/json": {
                "configuration": {},
                "runID": "27c2e6a3-6dc5-57e5-bc0e-f6e91ed27db3",
                "state": "Uninitialized"
              }
            }
          }
        }
      }
    },
    "/processor/{id}/run/{runID}/configuration": {
      "get": {
        "description": "Returns the current configuration or an error if is uninitialized. This is to distinguish between a properly configured but null-valued configuration and an uninitialized config.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Processors"
        ],
        "summary": "GetConfig",
        "operationId": "GetConfig",
        "parameters": [
          {
            "type": "string",
            "description": "The processor ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The run ID",
            "name": "runID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "required": [
                "value"
              ],
              "properties": {
                "trace": {
                  "description": "The full trace of the error. This may only be available in a debug mode",
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "value": "uninitialized"
              }
            }
          }
        }
      },
      "post": {
        "description": "Configure configures the given processor runID, and returns an error if the configuration is invalid. It returns the applied configuration on sucess.\n\nTODO: how to handle old versions of configuration and updates: pull a GM-Control and require a hash? or just a simple version number?",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Processors"
        ],
        "summary": "UpdateConfig",
        "operationId": "UpdateConfig",
        "parameters": [
          {
            "type": "string",
            "description": "The processor ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The run ID",
            "name": "runID",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "commit": {
                  "type": "string"
                },
                "repo": {
                  "type": "string"
                }
              },
              "example": {
                "commit": "d90f73b1-02ca-56a8-89b8-b27f8bda751b",
                "repo": "http://ifa.tg/basioc/repo.git"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "required": [
                "value"
              ],
              "properties": {
                "trace": {
                  "description": "The full trace of the error. This may only be available in a debug mode",
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "trace": "example_stack_trace",
                "value": "example error"
              }
            }
          }
        }
      }
    },
    "/processor/{id}/run/{runID}/data": {
      "get": {
        "description": "Returns all the data chunks which the processor has recieved, and all that it has written\n\nTODO: figure out if each chunk should report state: yes",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Processors"
        ],
        "summary": "GetData",
        "operationId": "GetData",
        "parameters": [
          {
            "type": "string",
            "description": "The processor ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The run ID",
            "name": "runID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "in": {
                  "type": "array",
                  "items": {}
                },
                "out": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "examples": {
              "application/json": {
                "in": [
                  {
                    "chunk_id": "a72eda4e-8db4-5692-b40c-eacc6c755d64",
                    "error": {
                      "trace": "example_stack_trace",
                      "value": "example error"
                    },
                    "state": "Syncing"
                  }
                ],
                "out": [
                  {
                    "chunk_id": "a72eda4e-8db4-5692-b40c-eacc6c755d64",
                    "error": {
                      "trace": "example_stack_trace",
                      "value": "example error"
                    },
                    "state": "Syncing"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/processor/{id}/run/{runID}/data/input/{chunkID}": {
      "get": {
        "description": "This is not likely to be used, as we might as well get all chunks, but it needs to be here.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Processors"
        ],
        "summary": "GetInputChunk",
        "operationId": "GetInputChunk",
        "parameters": [
          {
            "type": "string",
            "description": "The processor ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The run ID",
            "name": "runID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "the input chunk ID",
            "name": "chunkID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "state",
                "chunk_id"
              ],
              "properties": {
                "chunk_id": {
                  "description": "the ID of the chunk",
                  "type": "string"
                },
                "error": {
                  "description": "the error which caused the chunk to fail if it is in the Failed state",
                  "type": "object",
                  "required": [
                    "value"
                  ],
                  "properties": {
                    "trace": {
                      "description": "The full trace of the error. This may only be available in a debug mode",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "output_chunk_id": {
                  "description": "the output chunk ID association",
                  "type": "string"
                },
                "state": {
                  "description": "the state of the data chunk.",
                  "type": "string",
                  "enum": [
                    "Syncing",
                    "Determining",
                    "Validating",
                    "Running",
                    "Failed",
                    "Succeeded"
                  ]
                }
              }
            },
            "examples": {
              "application/json": {
                "chunk_id": "a72eda4e-8db4-5692-b40c-eacc6c755d64",
                "error": {
                  "trace": "example_stack_trace",
                  "value": "example error"
                },
                "output_chunk_id": "a3a3a1c6-826f-5fc0-8dee-9d015e1fff30",
                "state": "Syncing"
              }
            }
          }
        }
      },
      "post": {
        "description": "TODO: add example data to values for this request, also:\nfigure out if we need to specifically distinguish between raw and file data at API level: yes",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Processors"
        ],
        "summary": "AddData",
        "operationId": "AddData",
        "parameters": [
          {
            "type": "string",
            "description": "The processor ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The run ID",
            "name": "runID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "the input chunk ID",
            "name": "chunkID",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "state",
                "chunk_id"
              ],
              "properties": {
                "chunk_id": {
                  "description": "the ID of the chunk",
                  "type": "string"
                },
                "data": {
                  "type": "object"
                },
                "error": {
                  "description": "the error which caused the chunk to fail if it is in the Failed state",
                  "type": "object",
                  "required": [
                    "value"
                  ],
                  "properties": {
                    "trace": {
                      "description": "The full trace of the error. This may only be available in a debug mode",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "output_chunk_id": {
                  "description": "the output chunk ID association",
                  "type": "string"
                },
                "state": {
                  "description": "the state of the data chunk.",
                  "type": "string",
                  "enum": [
                    "Syncing",
                    "Determining",
                    "Validating",
                    "Running",
                    "Failed",
                    "Succeeded"
                  ]
                }
              },
              "example": {
                "chunk_id": "e916d66c-6491-59a0-b555-ee02a08e1028",
                "data": {
                  "type": "file",
                  "value": {
                    "fs_data": {
                      "driver": "local",
                      "location": "/bls/series.file"
                    }
                  }
                },
                "output_chunk_id": "61580ac1-5de8-59e1-b9cd-7766d1667dd9",
                "state": "Syncing"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "state",
                "chunk_id"
              ],
              "properties": {
                "chunk_id": {
                  "description": "the ID of the chunk",
                  "type": "string"
                },
                "error": {
                  "description": "the error which caused the chunk to fail if it is in the Failed state",
                  "type": "object",
                  "required": [
                    "value"
                  ],
                  "properties": {
                    "trace": {
                      "description": "The full trace of the error. This may only be available in a debug mode",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "state": {
                  "description": "the state of the data chunk.",
                  "type": "string",
                  "enum": [
                    "Syncing",
                    "Determining",
                    "Validating",
                    "Running",
                    "Failed",
                    "Succeeded"
                  ]
                }
              }
            },
            "examples": {
              "application/json": {
                "chunk_id": "a72eda4e-8db4-5692-b40c-eacc6c755d64",
                "error": {
                  "trace": "example_stack_trace",
                  "value": "example error"
                },
                "state": "Syncing"
              }
            }
          }
        }
      }
    },
    "/processor/{id}/run/{runID}/data/output/{chunkID}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Processors"
        ],
        "summary": "GetOutputChunk",
        "operationId": "GetOutputChunk",
        "parameters": [
          {
            "type": "string",
            "description": "The processor ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The run ID",
            "name": "runID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The output chunk ID to retrieve",
            "name": "chunkID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "required": [
                "state",
                "chunk_id"
              ],
              "properties": {
                "chunk_id": {
                  "description": "the ID of the chunk",
                  "type": "string"
                },
                "data": {
                  "type": "object"
                },
                "error": {
                  "description": "the error which caused the chunk to fail if it is in the Failed state",
                  "type": "object",
                  "required": [
                    "value"
                  ],
                  "properties": {
                    "trace": {
                      "description": "The full trace of the error. This may only be available in a debug mode",
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "state": {
                  "description": "the state of the data chunk.",
                  "type": "string",
                  "enum": [
                    "Syncing",
                    "Determining",
                    "Validating",
                    "Running",
                    "Failed",
                    "Succeeded"
                  ]
                }
              }
            },
            "examples": {
              "application/json": {
                "chunk_id": "a72eda4e-8db4-5692-b40c-eacc6c755d64",
                "data": {},
                "error": {
                  "trace": "example_stack_trace",
                  "value": "example error"
                },
                "state": "Syncing"
              }
            }
          }
        }
      }
    },
    "/processor/{id}/runs": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Processors"
        ],
        "summary": "GetAllRuns",
        "operationId": "GetAllRuns",
        "parameters": [
          {
            "type": "string",
            "description": "The processor ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {}
            },
            "examples": {
              "application/json": [
                {
                  "configuration": {},
                  "runID": "27c2e6a3-6dc5-57e5-bc0e-f6e91ed27db3",
                  "state": "Uninitialized"
                }
              ]
            }
          }
        }
      }
    },
    "/processors": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Processors"
        ],
        "summary": "GetAllProcessors",
        "operationId": "GetAllProcessors",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {}
            },
            "examples": {
              "application/json": [
                {
                  "id": "ftp",
                  "name": "FTP Downloader",
                  "tags": [
                    "fetcher",
                    "ftp"
                  ],
                  "version": "0.1.0"
                }
              ]
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Chunk": {
      "allOf": [
        {
          "$ref": "#/definitions/ChunkState"
        },
        {
          "type": "object",
          "required": [
            "chunk_id"
          ],
          "properties": {
            "chunk_id": {
              "description": "the ID of the chunk",
              "type": "string"
            },
            "error": {
              "description": "the error which caused the chunk to fail if it is in the Failed state",
              "$ref": "#/definitions/Error"
            }
          }
        }
      ]
    },
    "ChunkState": {
      "type": "object",
      "required": [
        "state"
      ],
      "properties": {
        "state": {
          "description": "the state of the data chunk.",
          "type": "string",
          "enum": [
            "Syncing",
            "Determining",
            "Validating",
            "Running",
            "Failed",
            "Succeeded"
          ]
        }
      }
    },
    "Configuration": {
      "type": "object"
    },
    "Data": {
      "type": "object"
    },
    "Data Chunk Input": {},
    "Data Chunk Output": {},
    "Error": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "trace": {
          "description": "The full trace of the error. This may only be available in a debug mode",
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Filesystem": {
      "type": "object",
      "required": [
        "driver",
        "location"
      ],
      "properties": {
        "driver": {
          "type": "string"
        },
        "location": {
          "type": "string"
        }
      }
    },
    "Processor": {},
    "ProcessorObject": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "description": "the machine readable processor ID",
          "type": "string"
        },
        "name": {
          "description": "a human readable name for the processor",
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {}
        },
        "version": {
          "type": "string"
        }
      }
    },
    "ProcessorState": {
      "type": "object",
      "required": [
        "state"
      ],
      "properties": {
        "state": {
          "description": "the state of the processor",
          "type": "string",
          "enum": [
            "Uninitialized",
            "Configured",
            "Idle",
            "Processing",
            "Failed",
            "Succeeded",
            "CompletedWithErrors"
          ]
        }
      }
    },
    "Processors Collection": {},
    "Run": {
      "allOf": [
        {
          "$ref": "#/definitions/ProcessorState"
        },
        {
          "type": "object",
          "required": [
            "runID"
          ],
          "properties": {
            "configuration": {
              "description": "the current configuration",
              "$ref": "#/definitions/Configuration"
            },
            "runID": {
              "description": "the globally unique ID of the run",
              "type": "string"
            }
          }
        }
      ]
    },
    "Run/Generic State Information": {},
    "Runs": {},
    "Sink": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "description": "the sink stream identifier",
          "type": "string"
        },
        "name": {
          "description": "a human readable name for the sink",
          "type": "string"
        }
      }
    },
    "Source": {
      "type": "object"
    }
  },
  "tags": [
    {
      "description": "All of the processor API is designed here.\n\nBecause the Wiz Manager could likely schedule multiple Pipelines or Tasks in the same Pipeline that use the same Processor Task on one physical/logical Processor, the Processor MUST support partitioning all of its logic including Configuration and State by a Manager-scope globally unique **Run ID**",
      "name": "Processors"
    }
  ]
}`))
}
